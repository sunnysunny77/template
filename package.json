{
  "name": "template",
  "type": "module",
  "version": "5.5.5",
  "description": "template",
  "main": "./js/app.js",
  "scripts": {
    "install": "cross-env-shell bash install.sh",
    "mkcert": "cross-env-shell bash mkcert.sh",
    "install-cert": "run-script-os",
    "install-cert:default": "cross-env-shell bash cert-store.sh",
    "install-cert:macos": "sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain ca.crt",
    "install-cert:win32": "powershell Import-Certificate -FilePath %INIT_CWD%\\ca.crt -CertStoreLocation cert:\\CurrentUser\\Root",
    "caddy-server": "run-script-os",
    "caddy-config": "run-script-os",
    "caddy-format": "run-script-os",
    "caddy-server:darwin:linux": "cross-env-shell bash source-env.sh && sudo $INIT_CWD/caddy run --config $INIT_CWD/Caddyfile",
    "caddy-config:darwin:linux": "cross-env-shell bash source-env.sh && sudo $INIT_CWD/caddy adapt --config $INIT_CWD/Caddyfile",
    "caddy-format:darwin:linux": "cross-env-shell bash source-env.sh && sudo $INIT_CWD/caddy fmt $INIT_CWD/Caddyfile --overwrite",
    "caddy-server:default": "cross-env-shell bash source-env.sh && $INIT_CWD/caddy run --config $INIT_CWD/Caddyfile",
    "caddy-config:default": "cross-env-shell bash source-env.sh && $INIT_CWD/caddy adapt --config $INIT_CWD/Caddyfile",
    "caddy-format:default": "cross-env-shell bash source-env.sh && $INIT_CWD/caddy fmt $INIT_CWD/Caddyfile --overwrite",
    "php-server": "node php-server.js",
    "open-server": "node open.js",
    "open-server-ssl": "cross-env-shell node --env-file=$INIT_CWD/.env open-ssl.js",
    "watch-css": "sass ./scss/app.scss:./site/css/app.min.css --style compressed -w",
    "build-css": "sass ./scss/app.scss:./site/css/app.min.css --style compressed",
    "production-css": "sass ./scss/app.scss:./site/css/app.min.css --style compressed --no-source-map",
    "watch-js": "rollup -c ./rollup.config-watch.mjs -w --sourcemap",
    "watch-js-ssl": "rollup -c ./rollup.config-watch-ssl.mjs -w --sourcemap",
    "build-js": "rollup -c ./rollup.config.mjs --sourcemap",
    "production-js": "rollup -c ./rollup.config.mjs",
    "watch": "concurrently --hide \"caddy-server\" \"npm:caddy-server\" \"npm:php-server\" \"npm:watch-css\" \"npm:watch-js\" \"npm:open-server\"",
    "watch-ssl": "concurrently --hide \"caddy-server\" \"npm:caddy-server\" \"npm:php-server\" \"npm:watch-css\" \"npm:watch-js-ssl\" \"npm:open-server-ssl\"",
    "build": "concurrently \"npm:build-css\" \"npm:build-js\"",
    "production": "concurrently \"npm:production-css\" \"npm:production-js\""
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sunnysunny77/template.git"
  },
  "author": "D.C",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/sunnysunny77/template/issues"
  },
  "homepage": "https://github.com/sunnysunny77/template#readme",
  "devDependencies": {
    "@fortawesome/fontawesome-free": "latest",
    "@rollup/plugin-babel": "latest",
    "@rollup/plugin-commonjs": "latest",
    "@rollup/plugin-terser": "latest",
    "bootstrap": "^5.3.3",
    "concurrently": "latest",
    "cross-env": "latest",
    "dotenv": "latest",
    "eslint": "latest",
    "fs": "latest",
    "globals": "latest",
    "open": "latest",
    "php-server": "latest",
    "rollup": "latest",
    "rollup-plugin-livereload": "latest",
    "rollup-plugin-sourcemaps": "latest",
    "run-script-os": "latest",
    "sass": "latest"
  }
}
